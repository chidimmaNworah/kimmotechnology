generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model abouts {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  img_url     String @db.VarChar(255)

  @@index([id], map: "ix_abouts_id")
}

model career_categories {
  id      Int       @id @default(autoincrement())
  name    String    @unique @db.VarChar(100)
  careers careers[]

  @@index([id], map: "ix_career_categories_id")
}

model careers {
  id                Int               @id @default(autoincrement())
  title             String            @db.VarChar(255)
  slug              String            @unique(map: "ix_careers_slug") @db.VarChar(255)
  excerpt           String            @db.VarChar(255)
  description       String
  industry          String?           @db.VarChar(255)
  field             String[]          @db.VarChar
  state             String?           @db.VarChar(255)
  region            String?           @db.VarChar(255)
  created_at        DateTime?         @default(now()) @db.Timestamp(6)
  updated_at        DateTime?         @default(now()) @db.Timestamp(6)
  category_id       Int
  career_categories career_categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  comments          comments[]

  @@index([id], map: "ix_careers_id")
}

model categories {
  id       Int        @id @default(autoincrement())
  name     String     @unique @db.VarChar(100)
  projects projects[]

  @@index([id], map: "ix_categories_id")
}

model comments {
  id         Int       @id @default(autoincrement())
  career_id  Int
  name       String    @db.VarChar(255)
  email      String    @db.VarChar(255)
  content    String
  created_at DateTime? @default(now()) @db.Timestamp(6)
  careers    careers   @relation(fields: [career_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([id], map: "ix_comments_id")
}

model expertise {
  id          Int     @id @default(autoincrement())
  name        String? @unique(map: "ix_expertise_name") @db.VarChar
  description String? @db.VarChar
  img_url     Json?   @db.Json

  @@index([id], map: "ix_expertise_id")
}

model jobs {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  slug        String    @unique(map: "ix_jobs_slug") @db.VarChar(255)
  excerpt     String    @db.VarChar(255)
  description String
  categories  String[]  @db.VarChar
  industry    String?   @db.VarChar(255)
  field       String[]  @db.VarChar
  state       String?   @db.VarChar(255)
  region      String?   @db.VarChar(255)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)

  @@index([id], map: "ix_jobs_id")
}

model messages {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  email      String    @db.VarChar(100)
  message    String
  created_at DateTime? @default(now()) @db.Timestamp(6)

  @@index([id], map: "ix_messages_id")
}

model newsletters {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(255)
  platform   String?   @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)

  @@index([id], map: "ix_newsletters_id")
}

model projects {
  id           Int        @id @default(autoincrement())
  title        String     @db.VarChar(100)
  description  String
  github_link  String?    @db.VarChar(100)
  preview_link String?    @db.VarChar(100)
  img_url      String     @db.VarChar(255)
  category_id  Int
  categories   categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id], map: "ix_projects_id")
}

model users {
  id              Int      @id @default(autoincrement())
  username        String   @unique(map: "ix_users_username") @db.VarChar
  hashed_password String   @db.VarChar
  is_admin        Boolean?

  @@index([id], map: "ix_users_id")
}
