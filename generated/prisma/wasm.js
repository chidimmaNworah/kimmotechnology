
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AboutsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  img_url: 'img_url'
};

exports.Prisma.Career_categoriesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.CareersScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  excerpt: 'excerpt',
  description: 'description',
  industry: 'industry',
  field: 'field',
  state: 'state',
  region: 'region',
  created_at: 'created_at',
  updated_at: 'updated_at',
  category_id: 'category_id'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.CommentsScalarFieldEnum = {
  id: 'id',
  career_id: 'career_id',
  name: 'name',
  email: 'email',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.ExpertiseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  img_url: 'img_url'
};

exports.Prisma.JobsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  excerpt: 'excerpt',
  description: 'description',
  categories: 'categories',
  industry: 'industry',
  field: 'field',
  state: 'state',
  region: 'region',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  message: 'message',
  created_at: 'created_at'
};

exports.Prisma.NewslettersScalarFieldEnum = {
  id: 'id',
  email: 'email',
  platform: 'platform',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProjectsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  github_link: 'github_link',
  preview_link: 'preview_link',
  img_url: 'img_url',
  category_id: 'category_id'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  username: 'username',
  hashed_password: 'hashed_password',
  is_admin: 'is_admin'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  abouts: 'abouts',
  career_categories: 'career_categories',
  careers: 'careers',
  categories: 'categories',
  comments: 'comments',
  expertise: 'expertise',
  jobs: 'jobs',
  messages: 'messages',
  newsletters: 'newsletters',
  projects: 'projects',
  users: 'users'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\USER\\Desktop\\projects\\websites\\kimmotech-nextjs\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\USER\\Desktop\\projects\\websites\\kimmotech-nextjs\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel abouts {\n  id          Int    @id @default(autoincrement())\n  title       String\n  description String\n  img_url     String @db.VarChar(255)\n\n  @@index([id], map: \"ix_abouts_id\")\n}\n\nmodel career_categories {\n  id      Int       @id @default(autoincrement())\n  name    String    @unique @db.VarChar(100)\n  careers careers[]\n\n  @@index([id], map: \"ix_career_categories_id\")\n}\n\nmodel careers {\n  id                Int               @id @default(autoincrement())\n  title             String            @db.VarChar(255)\n  slug              String            @unique(map: \"ix_careers_slug\") @db.VarChar(255)\n  excerpt           String            @db.VarChar(255)\n  description       String\n  industry          String?           @db.VarChar(255)\n  field             String[]          @db.VarChar\n  state             String?           @db.VarChar(255)\n  region            String?           @db.VarChar(255)\n  created_at        DateTime?         @default(now()) @db.Timestamp(6)\n  updated_at        DateTime?         @default(now()) @db.Timestamp(6)\n  category_id       Int\n  career_categories career_categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  comments          comments[]\n\n  @@index([id], map: \"ix_careers_id\")\n}\n\nmodel categories {\n  id       Int        @id @default(autoincrement())\n  name     String     @unique @db.VarChar(100)\n  projects projects[]\n\n  @@index([id], map: \"ix_categories_id\")\n}\n\nmodel comments {\n  id         Int       @id @default(autoincrement())\n  career_id  Int\n  name       String    @db.VarChar(255)\n  email      String    @db.VarChar(255)\n  content    String\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  careers    careers   @relation(fields: [career_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([id], map: \"ix_comments_id\")\n}\n\nmodel expertise {\n  id          Int     @id @default(autoincrement())\n  name        String? @unique(map: \"ix_expertise_name\") @db.VarChar\n  description String? @db.VarChar\n  img_url     Json?   @db.Json\n\n  @@index([id], map: \"ix_expertise_id\")\n}\n\nmodel jobs {\n  id          Int       @id @default(autoincrement())\n  title       String    @db.VarChar(255)\n  slug        String    @unique(map: \"ix_jobs_slug\") @db.VarChar(255)\n  excerpt     String    @db.VarChar(255)\n  description String\n  categories  String[]  @db.VarChar\n  industry    String?   @db.VarChar(255)\n  field       String[]  @db.VarChar\n  state       String?   @db.VarChar(255)\n  region      String?   @db.VarChar(255)\n  created_at  DateTime? @default(now()) @db.Timestamp(6)\n  updated_at  DateTime? @default(now()) @db.Timestamp(6)\n\n  @@index([id], map: \"ix_jobs_id\")\n}\n\nmodel messages {\n  id         Int       @id @default(autoincrement())\n  name       String    @db.VarChar(100)\n  email      String    @db.VarChar(100)\n  message    String\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n\n  @@index([id], map: \"ix_messages_id\")\n}\n\nmodel newsletters {\n  id         Int       @id @default(autoincrement())\n  email      String    @unique @db.VarChar(255)\n  platform   String?   @db.VarChar(100)\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  updated_at DateTime? @default(now()) @db.Timestamp(6)\n\n  @@index([id], map: \"ix_newsletters_id\")\n}\n\nmodel projects {\n  id           Int        @id @default(autoincrement())\n  title        String     @db.VarChar(100)\n  description  String\n  github_link  String?    @db.VarChar(100)\n  preview_link String?    @db.VarChar(100)\n  img_url      String     @db.VarChar(255)\n  category_id  Int\n  categories   categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@index([id], map: \"ix_projects_id\")\n}\n\nmodel users {\n  id              Int      @id @default(autoincrement())\n  username        String   @unique(map: \"ix_users_username\") @db.VarChar\n  hashed_password String   @db.VarChar\n  is_admin        Boolean?\n\n  @@index([id], map: \"ix_users_id\")\n}\n",
  "inlineSchemaHash": "fbcd0600bf692cf8adcd6345b3fb143ed1d106564279f6f99707767442c8c99f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"abouts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"img_url\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"career_categories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"careers\",\"kind\":\"object\",\"type\":\"careers\",\"relationName\":\"career_categoriesTocareers\"}],\"dbName\":null},\"careers\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"excerpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"field\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"career_categories\",\"kind\":\"object\",\"type\":\"career_categories\",\"relationName\":\"career_categoriesTocareers\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"comments\",\"relationName\":\"careersTocomments\"}],\"dbName\":null},\"categories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"projects\",\"relationName\":\"categoriesToprojects\"}],\"dbName\":null},\"comments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"career_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"careers\",\"kind\":\"object\",\"type\":\"careers\",\"relationName\":\"careersTocomments\"}],\"dbName\":null},\"expertise\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"img_url\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"jobs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"excerpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categories\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"field\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"messages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"newsletters\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"projects\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"github_link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preview_link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"img_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"categories\",\"relationName\":\"categoriesToprojects\"}],\"dbName\":null},\"users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hashed_password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_admin\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

